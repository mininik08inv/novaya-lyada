from django.core.management.base import BaseCommand
from django.contrib.sites.models import Site
from allauth.socialaccount.models import SocialApp
from allauth.socialaccount import providers
import os


class Command(BaseCommand):
    help = '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è Google –∏ VK'

    def add_arguments(self, parser):
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        )

    def handle(self, *args, **options):
        force = options['force']
        
        self.stdout.write(self.style.SUCCESS('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π...'))
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Å–∞–π—Ç
        site, created = Site.objects.get_or_create(
            pk=1,
            defaults={'domain': 'novaya-lyada.ru', 'name': 'Novaya Lyada'}
        )
        
        if created:
            self.stdout.write(self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω —Å–∞–π—Ç: {site.domain}'))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth
        self.setup_google_oauth(site, force)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ VK OAuth
        self.setup_vk_oauth(site, force)
        
        self.stdout.write(self.style.SUCCESS('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OAuth –∑–∞–≤–µ—Ä—à–µ–Ω–∞!'))
        self.stdout.write(self.style.WARNING('\n‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ:'))
        self.stdout.write('1. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ GOOGLE_CLIENT_ID –∏ GOOGLE_CLIENT_SECRET –≤ .env')
        self.stdout.write('2. –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ VK_CLIENT_ID –∏ VK_CLIENT_SECRET –≤ .env')
        self.stdout.write('3. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Redirect URIs –≤ Google Console –∏ VK Dev')

    def setup_google_oauth(self, site, force):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google OAuth"""
        google_client_id = os.getenv('GOOGLE_CLIENT_ID')
        google_client_secret = os.getenv('GOOGLE_CLIENT_SECRET')
        
        if not google_client_id or not google_client_secret:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è  Google OAuth: CLIENT_ID –∏–ª–∏ CLIENT_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã')
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        existing_app = SocialApp.objects.filter(provider='google').first()
        
        if existing_app and not force:
            self.stdout.write(
                self.style.WARNING(f'‚ö†Ô∏è  Google OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_app.id})')
            )
            self.stdout.write('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è')
            return
        
        if existing_app and force:
            existing_app.delete()
            self.stdout.write(self.style.SUCCESS('üóëÔ∏è  –°—Ç–∞—Ä–æ–µ Google OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ'))
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        google_app = SocialApp.objects.create(
            provider='google',
            name='Google OAuth',
            client_id=google_client_id,
            secret=google_client_secret,
        )
        
        google_app.sites.add(site)
        
        self.stdout.write(self.style.SUCCESS(f'‚úÖ Google OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω (ID: {google_app.id})'))
        self.stdout.write(f'   Client ID: {google_client_id[:20]}...')

    def setup_vk_oauth(self, site, force):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ VK OAuth"""
        vk_client_id = os.getenv('VK_CLIENT_ID')
        vk_client_secret = os.getenv('VK_CLIENT_SECRET')
        
        if not vk_client_id or not vk_client_secret:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è  VK OAuth: CLIENT_ID –∏–ª–∏ CLIENT_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã')
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        existing_app = SocialApp.objects.filter(provider='vk').first()
        
        if existing_app and not force:
            self.stdout.write(
                self.style.WARNING(f'‚ö†Ô∏è  VK OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_app.id})')
            )
            self.stdout.write('   –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è')
            return
        
        if existing_app and force:
            existing_app.delete()
            self.stdout.write(self.style.SUCCESS('üóëÔ∏è  –°—Ç–∞—Ä–æ–µ VK OAuth –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ'))
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        vk_app = SocialApp.objects.create(
            provider='vk',
            name='VK OAuth',
            client_id=vk_client_id,
            secret=vk_client_secret,
        )
        
        vk_app.sites.add(site)
        
        self.stdout.write(self.style.SUCCESS(f'‚úÖ VK OAuth –Ω–∞—Å—Ç—Ä–æ–µ–Ω (ID: {vk_app.id})'))
        self.stdout.write(f'   Client ID: {vk_client_id}')
